package com.example.dao;

import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;

import com.example.domain.BoardVO;

@Mapper // mapper랑 짝꿍이라는 의미, 매퍼를 보면서 만들기
public interface BoardDAO {
	
    // 전체 레코드 조회
	@Select("SELECT * FROM board ORDER BY seq DESC")
    public List<BoardVO> getBoardList(); // id가 함수명, 레코드가 여러 개라서 List, parameter타입 없어서 인자 없음 

    // 상세 레코드 조회 (파라미터로 BoardVO 사용, seq 필드만 채워서 전달)
    @Select("SELECT * FROM board WHERE seq=#{seq}")
	public BoardVO getBoard(BoardVO vo); //파라미터 타입 있고 변수명은 맘대로

    // 레코드 입력
    @Insert("INSERT INTO board(title, writer, content, regdate, cnt) VALUES(#{title}, #{writer}, #{content}, sysdate(), 0)")
    public Integer saveBoard(BoardVO vo); //insert, delete, update는 int/Integer 타입을 리턴, 몇 개 안 받을거면 void
    
    // 레코드 수정
    
    public Integer updateBoard(BoardVO vo);
    
    // 레코드 삭제
    @Delete("DELETE FROM board WHERE seq=#{seq}")
    public Integer deleteBoard(BoardVO vo);
}
